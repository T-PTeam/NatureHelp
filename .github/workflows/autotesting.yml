name: Run .NET and Cypress Tests

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Restore & run xUnit (.NET) tests
      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore

      - name: Run xUnit tests
        run: dotnet test --no-build --verbosity normal

      # Setup Node.js for Cypress
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install NPM dependencies
        run: npm ci
        working-directory: ./src/NatureHelp/ClientApp/nature-help

      # Run Cypress component tests
      - name: Run Cypress Component Tests
        run: npm run cy:component
        working-directory: ./src/NatureHelp/ClientApp/nature-help

      # Run Cypress E2E tests (with server)
      - name: Start ASP.NET app
        run: dotnet run --project ./src/NatureHelp/NatureHelp.API &
        env:
          ASPNETCORE_ENVIRONMENT: Testing
          ConnectionStrings__DefaultConnection: Host=localhost;Database=testdb;Username=postgres;Password=postgres;

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:5000

      - name: Run Cypress E2E Tests
        run: npm run cy:e2e
        working-directory: ./src/NatureHelp/ClientApp/nature-help
